- name : Configure Jenkins Server

  hosts: default

  vars:
    jenkins_version: "2.73.2"
    jenkins_url: http://127.0.0.1
    jenkins_port: 8080
    jenkins_home: /var/lib/jenkins
    jenkins_config_owner: jenkins
    jenkins_config_group: jenkins
    jenkins_admin_username: admin
    jenkins_admin_password: concrete123..
    jenkins_jobs: [
                "example-hellonode",
                ]
    jenkins_java_opts: "-Djenkins.install.runSetupWizard=false"
    jenkins_apt_packages:
      - openjdk-8-jdk
    jenkins_java_version: "java-1.8.0-openjdk-amd64"
    jenkins_source_dir_configs: "{{ playbook_dir }}/jenkins-configs"
    jenkins_source_dir_jobs: "{{ jenkins_source_dir_configs }}/jobs"
    jenkins_source_admin_config: "{{ jenkins_source_dir_configs }}/users/admin/config.xml"
    jenkins_source_config_xml: "{{ jenkins_source_dir_configs }}/config.xml"
    jenkins_plugins_state: present
    jenkins_plugins_updates_expiration: 86400
    jenkins_plugins_timeout: 30
    jenkins_plugins:
      - ace-editor
      - antisamy-markup-formatter
      - ant
      - authentication-tokens
      - bouncycastle-api
      - branch-api
      - build-timeout
      - chucknorris
      - cloudbees-folder
      - credentials-binding
      - credentials
      - display-url-api
      - docker-commons
      - docker-workflow
      - durable-task
      - email-ext
      - external-monitor-job
      - git-client
      - github-api
      - github-branch-source
      - github
      - git
      - git-server
      - gradle
      - greenballs
      - handlebars
      - jackson2-api
      - jquery-detached
      - junit
      - ldap
      - mailer
      - mapdb-api
      - matrix-auth
      - matrix-project
      - momentjs
      - pam-auth
      - pipeline-build-step
      - pipeline-github-lib
      - pipeline-graph-analysis
      - pipeline-input-step
      - pipeline-milestone-step
      - pipeline-model-api
      - pipeline-model-declarative-agent
      - pipeline-model-definition
      - pipeline-model-extensions
      - pipeline-rest-api
      - pipeline-stage-step
      - pipeline-stage-tags-metadata
      - pipeline-stage-view
      - plain-credentials
      - resource-disposer
      - scm-api
      - script-security
      - ssh-credentials
      - ssh-slaves
      - structs
      - subversion
      - timestamper
      - token-macro
      - windows-slaves
      - workflow-aggregator
      - workflow-api
      - workflow-basic-steps
      - workflow-cps-global-lib
      - workflow-cps
      - workflow-durable-task-step
      - workflow-job
      - workflow-multibranch
      - workflow-scm-step
      - workflow-step-api
      - workflow-support
      - ws-cleanup

  environment:
    PYTHONPATH: "{{ lookup('env','PYTHONPATH') }}:/usr/local/lib/python2.7/dist-packages:/usr/local/lib/python2.7/site-packages"

  tasks:
    - name: Create Jenkins group
      group:
          name: "{{ jenkins_config_group }}"
          state: present

    - name: Create Jenkins user
      user:
        name: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        home: "{{ jenkins_home }}"
        shell: "/bin/false"
        state: present

    - name: Install apt PPA dependencies
      apt:
        name: python-software-properties

    - name: Install the Debian keyring
      apt:
        name: debian-archive-keyring

    - name: Add Debian experimental repository for OpenJDK
      apt_repository:
        repo: deb http://httpredir.debian.org/debian experimental main
        state: present

    - name: Add Debian sid repository for OpenJDK
      apt_repository:
        repo: deb http://httpredir.debian.org/debian sid main
        state: present

    - name: Create pinning file for apt
      copy:
        src: files/apt/debian-package-pins
        dest: /etc/apt/preferences.d/debian
        owner: root
        group: root
        mode: 0644

    - name: Install apt packages
      action: apt name={{ item }} state=present
      with_items: "{{ jenkins_apt_packages }}"

    - name: Set default Java version
      shell: /usr/sbin/update-java-alternatives -s "{{ jenkins_java_version }}"
      ignore_errors: yes

    - name: Add Jenkins key
      apt_key:
        url: "https://pkg.jenkins.io/debian-stable/jenkins.io.key"
        state: present

    - name: Add Jenkins repository
      apt_repository:
        repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
        state: present

    - name: Install Jenkins binary package
      apt:
        name: "jenkins={{ jenkins_version }}"
        force: yes
        update_cache: yes

    - name: Set JENKINS_HOME
      lineinfile:
        dest: /etc/default/jenkins
        line: "JENKINS_HOME={{ jenkins_home }}"
        regexp: '^JENKINS_HOME='

    - name: Set Jenkins port
      lineinfile:
        dest: /etc/default/jenkins
        regexp: '^HTTP_PORT='
        line: "HTTP_PORT={{ jenkins_port }}"

    - name: Set Jenkins command line options
      lineinfile:
        dest: /etc/default/jenkins
        regexp: '^JAVA_ARGS='
        line: "JAVA_ARGS=\"{{ jenkins_java_opts }}\""

    - name: Jenkins is running
      service:
        name: jenkins
        state: restarted

    - pause: seconds=15

    - name: Create admin user directory
      file: path="{{ jenkins_home }}/users/admin" owner=jenkins group=jenkins mode=0755 state=directory recurse=yes

    - name: Copy admin Configuration file
      copy:
        src: "{{ jenkins_source_admin_config }}"
        dest: "{{ jenkins_home }}/users/admin/config.xml"
        mode: 0644
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"

    - name: Configuration file is up to date (config.xml)
      copy:
        src: "{{ jenkins_source_config_xml }}"
        dest: "{{ jenkins_home }}/config.xml"
        mode: 0644
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"

    # Update Jenkins so that plugin updates don't fail
    - name: Create update directory
      file:
        path: "{{ jenkins_home }}/updates"
        state: directory
        owner: jenkins
        group: jenkins

    - name: Download current plugin updates from Jenkins update site
      get_url:
        url: http://updates.jenkins-ci.org/update-center.json
        dest: "{{ jenkins_home}}/updates/default.json"
        owner: jenkins
        group: jenkins
        mode: 0440

    - name: Remove first and last line from json file
      replace:
        path: "{{ jenkins_home }}/updates/default.json"
        regexp: "1d;$d"

    - name: get token for jenkins api
      uri:
        force_basic_auth: yes
        user: admin
        password: concrete123..
        url: '{{ jenkins_url }}:{{ jenkins_port }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
        return_content: yes
        status_code: 200,404
      register: jenkins_token

    - name: Install plugins if crumb is enabled
      uri:
        force_basic_auth: yes
        user: admin
        password: concrete123..
        url: "{{ jenkins_url }}:{{ jenkins_port }}/pluginManager/installNecessaryPlugins"
        method: POST
        headers:
          Content-Type: "text/xml"
          Jenkins-Crumb: "{{ jenkins_token.content.split(':')[1] }}"
        body: "<jenkins><install plugin=\"{{ item }}@latest\" /></jenkins>"
        status_code: 200,302
      with_items: "{{ jenkins_plugins }}"
      when: jenkins_token.status == 200

    - name: Jenkins is running
      service:
        name: jenkins
        state: restarted

    - pause: seconds=15

    - name: Job directories are present
      file:
        path: "{{ jenkins_home }}/jobs/{{ item }}"
        state: directory
        mode: 0777
      with_items: "{{ jenkins_jobs }}"

    - name: Jobs are present
      copy:
        src: "{{ jenkins_source_dir_jobs }}/{{ item }}/config.xml"
        dest: "{{ jenkins_home }}/jobs/{{ item }}/config.xml"
        mode: 0777
      with_items: "{{ jenkins_jobs }}"

    - name: get token for jenkins api
      uri:
        force_basic_auth: yes
        user: admin
        password: concrete123..
        url: '{{ jenkins_url }}:{{ jenkins_port }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
        return_content: yes
        status_code: 200,404
      register: jenkins_token

    - name: Reload Jenkins if crumb is enabled
      uri:
        force_basic_auth: yes
        user: admin
        password: concrete123..
        url: "{{ jenkins_url }}:{{ jenkins_port }}/reload"
        method: POST
        status_code: 200,302
        headers:
          Jenkins-Crumb: "{{ jenkins_token.content.split(':')[1] }}"
      ignore_errors: yes
      when: jenkins_token.status == 200
